let config,current_url="",customElementTagsAndCode=[];async function run(){config=JSON.parse(await get("config.json")),customElementsSetup(),(url=new URL(window.location.href)).searchParams.get("page")?goTo(url.searchParams.get("page")):goTo(config.homePage),activate()}async function customElementsSetup(){for(var tag of config.customElementCollection)injectJS(await get(`elements/${tag}.js`)+(tag+".tags.forEach(tag => {customElementTagsAndCode.push(tag)})"),tag+"_JS")}function injectHTML(html){document.querySelector("page").innerHTML=html}function activate(){processElementAndChildren(document.body)}function processElementAndChildren(element){processElement(element);for(let i=0;i<element.children.length;i++)processElementAndChildren(element.children[i])}function processElement(element){for(var tag of builtInElements)if(element.tagName.toLowerCase()===tag.tag.toLowerCase())return void tag.code(element);for(let tag of customElementTagsAndCode)if(element.tagName.toLowerCase()===tag.tag.toLowerCase())return void tag.code(element)}async function get(url){try{var response=await fetch(url);if(response.ok)return await response.text();throw new Error("HTTP error! Status: "+response.status)}catch(error){throw console.error("Error fetching data:",url,error),error}}async function goTo(url){var htmlCode=await get(config.pageDirectory+`/${url}/${url}.html`);try{var jsCode=await get(config.pageDirectory+`/${url}/${url}.js`);jsCode&&null==document.getElementById(url+"_JS")&&injectJS(jsCode,url+"_JS")}catch(error){config.debug&&console.log("No JS file found for "+url)}try{var CSSCode=await get(config.pageDirectory+`/${url}/${url}.css`);CSSCode&&null==document.getElementById(url+"_CSS")&&injectCSS(CSSCode,url+"_CSS")}catch(error){config.debug&&console.log("No CSS file found for "+url)}config.debug&&console.log(htmlCode),current_url=url;jsCode=new URL(window.location.href);jsCode.searchParams.set("page",url),history.replaceState(null,"",jsCode.toString()),injectHTML(htmlCode),activate()}async function injectJS(code,id=void 0){var script=document.createElement("script");script.type="text/javascript",script.textContent=code,script.id=id,document.head.appendChild(script)}run();let builtInElements=[{tag:"if",code:ifElement},{tag:"inlineJS",code:inlineJS},{tag:"weblink",code:weblink},{tag:"padding",code:padding},{tag:"loadCode",code:loadCode}],customElements;async function inlineJS(element){var innerhtml=element.innerHTML;if(element.getAttribute("preload")&&(element.innerHTML=element.getAttribute("preload")),"true"==element.getAttribute("async"))injectJS(`
    async function inlinecode(self) {
        ${innerhtml.replace(/&gt;/g,">").replace(/&lt;/g,"<").replace(/&amp;/g,"&")}
    }
    `,"inlineJSCode"),element.innerHTML=await inlinecode(element);else{let code=`
    function inlinecode(self) {
        ${innerhtml.replace(/&gt;/g,">").replace(/&lt;/g,"<").replace(/&amp;/g,"&")}
    }
    `;injectJS(code,"inlineJSCode"),element.innerHTML=inlinecode(element)}return changeTag(element,"span"),activate(),document.getElementById("inlineJSCode").remove(),element}function weblink(element){var anchorElement=changeTag(element,"a"),element=element.getAttribute("href");anchorElement.href=`javascript:goTo('${element}')`}async function loadCode(element){var Loadurl=element.getAttribute("url");injectJS(await get(`${config.pageDirectory}/${current_url}/${Loadurl}.js`),"loadCodeCode"),element.remove()}function padding(element){element=changeTag(element,"div");return element.style.padding="10px",element}function changeTag(element,newTagName){if(!element)return null;let newElement=document.createElement(newTagName);return[...element.attributes].forEach(attr=>newElement.setAttribute(attr.name,attr.value)),newElement.innerHTML=element.innerHTML,element.parentNode.replaceChild(newElement,element),newElement}function injectCSS(code,id=void 0){var style=document.createElement("style");style.type="text/css",style.textContent=code,id&&(style.id=id),document.head.appendChild(style)}function ifElement(element){let code=element.getAttribute("if");return eval(code)?element:(element.remove(),null)}function getUrlBasedGlobalVariable(variableName){"page"===variableName&&alert("sry dit word gebruikt door de url page system");var url=new URL(window.location.href);if(url.searchParams.has(variableName))return url.searchParams.get(variableName)}function setUrlBasedGlobalVariable(variableName,value){"page"===variableName&&alert("sry dit word gebruikt door de url page system");var url=new URL(window.location.href);url.searchParams.set(variableName,value),history.replaceState(null,"",url.toString())}